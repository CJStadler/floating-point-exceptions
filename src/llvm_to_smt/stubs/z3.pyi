class Solver:
    def push(self) -> None: ...
    def add(self, ArithRef) -> None: ...

class ArithRef: ...

class RatNumRef(ArithRef):
    def as_decimal(self, precision: int) -> str: ...

def Real(name: str) -> ArithRef: ...

def RealVal(repr: str) -> RatNumRef: ...

# Many functions accept either an ArithRef or a constant.
BoolArith = Union[bool, ArithRef]
FloatArith = Union[float, ArithRef]

def And(a: BoolArith, b: BoolArith) -> ArithRef: ...

